#版本号
version: "3"
networks:
  common: #网络名称
    driver: bridge      #桥接模式

#服务
services:
  mysql:
    container_name: mysql        # 指定容器的名称
    hostname: mysql
    image: mysql:8                 # 指定镜像和版本
    restart: always
    ports:
      - "3306:3306"
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: "dev"
      MYSQL_USER: "dev"
      MYSQL_PASSWORD: "dev"
    command:
      --max_connections=64
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --innodb_rollback_on_timeout='ON'
      --default-time-zone='+8:00'
      --default-authentication-plugin=mysql_native_password
    privileged: true
    volumes:
      - ./cicd/app/mysql/conf:/etc/mysql/conf.d:ro
      - ./cicd/app/mysql/init:/docker-entrypoint-initdb.d:ro
      - ./cicd/app/mysql/data:/var/lib/mysql
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro
      - /etc/hosts:/etc/hosts:ro
    networks:
      - common


  elasticsearch:
    image: elasticsearch:7.7.0  #镜像
    container_name: elasticsearch  #定义容器名称
    restart: always  #开机启动，失败也会一直重启
    environment:
      - "cluster.name=elasticsearch" #设置集群名称为elasticsearch
      - "discovery.type=single-node" #以单一节点模式启动
      - "ES_JAVA_OPTS=-Xms512m -Xmx1024m" #设置使用jvm内存大小
    volumes:
      - ./cicd/app/elasticsearch/plugins:/usr/share/elasticsearch/plugins #插件文件挂载
      - ./cicd/app/elasticsearch/data:/usr/share/elasticsearch/data #数据文件挂载
    ports:
      - "9200:9200"


  #服务名称
  redis:
    #镜像名: 仓库/标签:版本
    image: redis:alpine
    container_name: redis
    hostname: redis
    restart: always
    # 暴露端口信息
    ports:
      - "6379:6379"
    volumes:
      - ./cicd/app/redis:/usr/local/etc/redis:ro
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro
      - /etc/hosts:/etc/hosts:ro
    command:
      docker-entrypoint.sh redis-server /usr/local/etc/redis/redis.conf
    networks:
      - common

  #服务名称
  redis-insight:
    #镜像名: 仓库/标签:版本
    image: redislabs/redisinsight:latest
    container_name: redis-insight
    hostname: redis-insight
    restart: always
    # 暴露端口信息
    ports:
      - "8001:8001"
    volumes:
      - ./cicd/app/redis-insight/db:/db
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro
      - /etc/hosts:/etc/hosts:ro
    networks:
      - common

  zookeeper:
    image: zookeeper
    container_name: zookeeper
    restart: always
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888;2181
    volumes:
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro
      - /etc/hosts:/etc/hosts:ro
    networks:
      - common

  nginx:
    image: nginx
    container_name: nginx
    restart: always
    hostname: nginx
    ports:
      - "8080:8080"
    volumes:
      - ./cicd/app/nginx:/etc/nginx
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro
      - /etc/hosts:/etc/hosts:ro
    command: [ nginx-debug, '-g', 'daemon off;' ]
    networks:
      - common

  consul:
    container_name: consul
    image: consul
    hostname: consul
    restart: always
    ports:
      - "8500:8500"
    volumes:
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro
      - /etc/hosts:/etc/hosts:ro
    networks:
      - common

  eureka-v1:
    container_name: eureka-v1
    image: springcloud/eureka
    hostname: eureka-v1
    restart: always
    ports:
      - "18761:8761"
    volumes:
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro
      - /etc/hosts:/etc/hosts:ro
    networks:
      - common

  #服务名称
  eureka-server:
    #镜像名: 仓库/标签:版本
    image: taskbeez/eureka-server:master
    container_name: eureka-server
    restart: always
    ports:
      - "8761:8761"
    volumes:
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro
      - /etc/hosts:/etc/hosts:ro
    networks:
      - common

  jhipster-registry:
    container_name: jhipster-registry
    image: jhipster/jhipster-registry:latest
    hostname: jhipster-registry
    restart: always
    ports:
      - "8761:8761"
    volumes:
      - ./cicd/app/jhipster-registry/config:/vault/config
      - ./cicd/app/jhipster-registry/data:/vault/file
      - ./cicd/app/jhipster-registry/logs:/vault/logs
    environment:
      # - _JAVA_OPTIONS=-Xmx512m -Xms256m
      # - JAVA_OPTS=-Dfile.encoding=UTF-8
      - eureka.server.enable-self-preservation=false
      - SPRING_PROFILES_ACTIVE=dev,swagger
      - SPRING_SECURITY_USER_PASSWORD=admin
      - JHIPSTER_REGISTRY_PASSWORD=admin
      - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_TYPE=native
      - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_SEARCH_LOCATIONS=file:/vault/config/
      # - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_TYPE=git
      # - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_URI=https://github.com/jhipster/jhipster-registry/
      # - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_SEARCH_PATHS=central-config
    networks:
      - common

  nacos:
    image: nacos/nacos-server:latest
    container_name: nacos
    restart: always
    hostname: nacos
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9849:9849"
    environment:
      NACOS_AUTH_ENABLE: true
        -Dnacos.core.auth.plugin.nacos.token.secret.key=SecretKey012345678901234567890123456789012345678901234567890123456789
        -Dnacos.core.auth.server.identity.key=serverIdentity
        -Dnacos.core.auth.server.identity.value=SecretKey012345678901234567890123456789012345678901234567890123456789
      PREFER_HOST_MODE: hostname
      MODE: standalone
      SPRING_DATASOURCE_PLATFORM: mysql
      MYSQL_DATABASE_NUM: 1
      MYSQL_SERVICE_HOST: mysql
      MYSQL_SERVICE_PORT: 3306
      MYSQL_SERVICE_DB_NAME: nacos
      MYSQL_SERVICE_USER: root
      MYSQL_SERVICE_PASSWORD: root
      MYSQL_SERVICE_DB_PARAM: characterEncoding=utf8&autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai
    volumes:
      - ./cicd/app/nacos/standalone-logs:/home/nacos/logs
      - ./cicd/app/nacos/init.d:/home/nacos/init.d/
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro
      - /etc/hosts:/etc/hosts:ro
    depends_on:
      - mysql
    networks:
      - common

  #服务名称
  sentinel-dashboard:
    #镜像名: 仓库/标签:版本
    image: bladex/sentinel-dashboard
    container_name: sentinel-dashboard
    restart: always
    # 暴露端口信息
    ports:
      - "8858:8858"
    volumes:
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro
      - /etc/hosts:/etc/hosts:ro
    networks:
      - common


  xxl-job-admin:
    container_name: xxl-job-admin
    hostname: xxl-job-admin
    image: xuxueli/xxl-job-admin:2.4.0
    restart: always
    # docker 镜像
    # 容器名称
    volumes:
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro
      - /etc/hosts:/etc/hosts:ro
      # 日志目录映射到主机目录
      - ./logs:/data/applogs
    ports:
      # 端口映射
      - "8800:8800"
    environment:
      # 设置启动参数
      PARAMS: '
      --server.port=8800
      --server.servlet.context-path=/xxl-job-admin
      --spring.datasource.url=jdbc:mysql://mysql/xxl_job?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai
      --spring.datasource.username=root
      --spring.datasource.password=root
      --spring.mail.username=842618916@qq.com
      --spring.mail.password=
      --xxl.job.accessToken='  #代码里面需要指定的token
    depends_on:
      - mysql
    networks:
      - common
  # http://localhost:8800/xxl-job-admin admin/123456
  xxl-job-executor-sample:
    hostname: xxl-job-executor-sample
    image: feimingxliu/xxl-job-executor-sample:2.4.0
    container_name: xxl-job-executor-sample
    ports:
      - "8081:8081"
      - "9999:9999"
    environment:
      ### [xxl.job.accessToken] 调度中心通讯TOKEN [选填]：非空时启用；
      PARAMS: "
      --xxl.job.admin.addresses=http://xxl-job-admin:8800/xxl-job-admin
      --xxl.job.executor.ip=xxl-job-executor-sample
      --xxl.job.accessToken=
      "
    volumes:
      - ./logs/:/data/applogs/xxl-job/
    links:
      - "xxl-job-admin"
    depends_on:
      - mysql
      - xxl-job-admin
    networks:
      - common

  xxl-job-executor-sample-springboot:
    hostname: xxl-job-executor-sample-springboot
    image: lyr123456/xxl-job-executor-sample-springboot:2.3.0
    container_name: xxl-job-executor-sample-springboot
    ports:
      - "9999:9999"
    environment:
      PARAMS: "--xxl.job.admin.addresses=http://xxl-job-admin:8800/xxl-job-admin --xxl.job.executor.ip=xxl-job-executor-sample-springboot"
    volumes:
      - ./logs/:/data/applogs/xxl-job/
    links:
      - "xxl-job-admin"
    depends_on:
      - mysql
      - xxl-job-admin
    networks:
      - common

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-parent</artifactId>
        <version>3.1.7</version>
    </parent>

    <artifactId>common</artifactId>
    <groupId>com.github.fanzezhen</groupId>
    <packaging>pom</packaging>
    <version>3.1.7-20240202</version>

    <properties>
        <com.github.fanzezhen.jdk8.version>0.0.3.4</com.github.fanzezhen.jdk8.version>
        <com.github.fanzezhen.common.version>3.1.7-20240202</com.github.fanzezhen.common.version>
        <app.server>-tomcat</app.server>
        <ch.qos.logback.version>1.2.3</ch.qos.logback.version>
        <cn.hutool.version>5.8.25</cn.hutool.version>
        <cn.stylefeng.roses.version>2.2.13</cn.stylefeng.roses.version>
        <com.github.penggle.version>2.3.2</com.github.penggle.version>
        <com.alibaba.version>2.0.37</com.alibaba.version>
        <com.alibaba.boot.version>0.2.12</com.alibaba.boot.version>
        <com.alibaba.cloud.version>2022.0.0.0</com.alibaba.cloud.version>
        <com.alibaba.csp.version>2.0.0-alpha</com.alibaba.csp.version>
        <com.alibaba.druid.version>1.2.21</com.alibaba.druid.version>
        <com.baomidou.version>3.5.5</com.baomidou.version>
        <com.fasterxml.jackson.version>2.15.2</com.fasterxml.jackson.version>
        <com.google.code.gson.version>2.8.6</com.google.code.gson.version>
        <com.google.guava.version>29.0-jre</com.google.guava.version>
        <com.lmax.version>3.4.1</com.lmax.version>
        <com.mysql.version>8.3.0</com.mysql.version>
        <com.netflix.ribbon.version>2.7.18</com.netflix.ribbon.version>
        <com.oracle.version>11.2.0.3</com.oracle.version>
        <com.zaxxer.version>3.4.5</com.zaxxer.version>
        <commons-net.version>3.6</commons-net.version>
        <eu.bitwalker.version>1.21</eu.bitwalker.version>
        <io.github.openfeign.version>12.4</io.github.openfeign.version>
        <io.jaegertracing.version>1.6.0</io.jaegertracing.version>
        <io.jsonwebtoken.version>0.9.1</io.jsonwebtoken.version>
        <io.projectreactor.version>3.4.7</io.projectreactor.version>
        <io.springfox.version>3.0.0</io.springfox.version>
        <javax.annotation.version>1.3.2</javax.annotation.version>
        <javax.servlet.version>4.0.1</javax.servlet.version>
        <javax.persistence.version>2.2</javax.persistence.version>
        <nz.net.ultraq.thymeleaf.version>2.4.1</nz.net.ultraq.thymeleaf.version>
        <net.lingala.zip4j.version>2.6.2</net.lingala.zip4j.version>
        <org.apache.velocity.version>2.3</org.apache.velocity.version>
        <org.aspectj.version>1.9.6</org.aspectj.version>
        <org.freemarker.version>2.3.30</org.freemarker.version>
        <org.apereo.cas.version>6.6.3</org.apereo.cas.version>
        <org.aspectj.version>1.9.6</org.aspectj.version>
        <org.apache.commons.commons-beanutils.version>1.9.4</org.apache.commons.commons-beanutils.version>
        <org.apache.commons.commons-collections4.version>4.4</org.apache.commons.commons-collections4.version>
        <org.apache.logging.log4j.version>2.20.0</org.apache.logging.log4j.version>
        <org.apache.poi.version>5.2.5</org.apache.poi.version>
        <org.hibernate.validator.version>8.0.1.Final</org.hibernate.validator.version>
        <org.mybatis.spring.boot.version>2.2.0</org.mybatis.spring.boot.version>
        <org.redisson.version>3.23.2</org.redisson.version>
        <org.reflections.version>0.9.12</org.reflections.version>
        <org.springdoc.version>2.1.0</org.springdoc.version>
        <org.springframework.boot.version>${project.parent.version}</org.springframework.boot.version>
        <org.springframework.cloud.version>4.0.3</org.springframework.cloud.version>
        <org.springframework.social.version>1.1.6.RELEASE</org.springframework.social.version>
        <org.ssssssss.version>2.1.1</org.ssssssss.version>
        <org.thymeleaf.version>3.0.11.RELEASE</org.thymeleaf.version>
        <org.thymeleaf.extras.version>3.0.4.RELEASE</org.thymeleaf.extras.version>
        <us.codecraft.version>0.10.0</us.codecraft.version>
        <p6spy.version>3.9.1</p6spy.version>
        <redis.clients.version>3.5.2</redis.clients.version>
        <spring-cloud.version>2022.0.3</spring-cloud.version>
        <spring-cloud-starter-eureka-server.version>1.4.7</spring-cloud-starter-eureka-server.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>17</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven-compiler-plugin.version>3.12.1</maven-compiler-plugin.version>
        <maven-deploy-plugin.version>3.1.1</maven-deploy-plugin.version>
        <maven-gpg-plugin.version>3.1.0</maven-gpg-plugin.version>
        <maven-javadoc-plugin.version>3.6.3</maven-javadoc-plugin.version>
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
        <maven-scm-plugin.version>2.0.1</maven-scm-plugin.version>
        <maven-shade-plugin.version>3.5.1</maven-shade-plugin.version>
        <maven-source-plugin.version>3.3.0</maven-source-plugin.version>
        <maven.plugin.validation>VERBOSE</maven.plugin.validation>
        <nexus-staging-maven-plugin.version>1.6.13</nexus-staging-maven-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.github.fanzezhen</groupId>
                <artifactId>common-all</artifactId>
                <version>${com.github.fanzezhen.common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.fanzezhen</groupId>
                <artifactId>common-core</artifactId>
                <version>${com.github.fanzezhen.common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.fanzezhen</groupId>
                <artifactId>common-exception</artifactId>
                <version>${com.github.fanzezhen.common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.fanzezhen</groupId>
                <artifactId>common-mp</artifactId>
                <version>${com.github.fanzezhen.common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.fanzezhen</groupId>
                <artifactId>common-log</artifactId>
                <version>${com.github.fanzezhen.common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.fanzezhen</groupId>
                <artifactId>common-redis</artifactId>
                <version>${com.github.fanzezhen.common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.fanzezhen</groupId>
                <artifactId>common-security</artifactId>
                <version>${com.github.fanzezhen.common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.fanzezhen</groupId>
                <artifactId>common-sentinel</artifactId>
                <version>${com.github.fanzezhen.common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.fanzezhen</groupId>
                <artifactId>common-spring-doc</artifactId>
                <version>${com.github.fanzezhen.common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.fanzezhen</groupId>
                <artifactId>common-web</artifactId>
                <version>${com.github.fanzezhen.common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.boot</groupId>
                <artifactId>nacos-config-spring-boot-starter</artifactId>
                <version>${com.alibaba.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
                <version>${com.alibaba.cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
                <version>${com.alibaba.cloud.version}</version>
            </dependency>
            <!--HuTool-->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${cn.hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-core</artifactId>
                <version>${cn.hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-log</artifactId>
                <version>${cn.hutool.version}</version>
            </dependency>
            <!--alibaba-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${com.alibaba.druid.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${com.alibaba.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-sentinel-datasource</artifactId>
                <version>${com.alibaba.cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>
                <version>${com.alibaba.cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-core</artifactId>
                <version>${com.alibaba.csp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-datasource-extension</artifactId>
                <version>${com.alibaba.csp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-parameter-flow-control</artifactId>
                <version>${com.alibaba.csp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-spring-cloud-gateway-adapter</artifactId>
                <version>${com.alibaba.csp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-transport-simple-http</artifactId>
                <version>${com.alibaba.csp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-datasource-nacos</artifactId>
                <version>${com.alibaba.csp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>spring-boot-starter-ahas-sentinel-client</artifactId>
                <version>${com.alibaba.csp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentienl-http-simple-transport</artifactId>
                <version>${com.alibaba.cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus</artifactId>
                <version>${com.baomidou.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-annotation</artifactId>
                <version>${com.baomidou.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${com.baomidou.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-core</artifactId>
                <version>${com.baomidou.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-extension</artifactId>
                <version>${com.baomidou.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-generator</artifactId>
                <version>${com.baomidou.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-parameter-names</artifactId>
                <version>${com.fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${com.fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${com.fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${com.fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${com.fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${com.google.guava.version}</version>
            </dependency>
            <dependency>
                <groupId>eu.bitwalker</groupId>
                <artifactId>UserAgentUtils</artifactId>
                <version>${eu.bitwalker.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${org.apache.commons.commons-beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${org.apache.commons.commons-collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-net</groupId>
                <artifactId>commons-net</artifactId>
                <version>${commons-net.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${com.google.code.gson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.lmax</groupId>
                <artifactId>disruptor</artifactId>
                <version>${com.lmax.version}</version>
            </dependency>
            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <version>${com.mysql.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>${com.zaxxer.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.13.0</version>
            </dependency>
            <dependency>
                <groupId>javax.persistence</groupId>
                <artifactId>javax.persistence-api</artifactId>
                <version>${javax.persistence.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.servlet.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>2.0.1.Final</version>
            </dependency>
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>${javax.annotation.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${org.apache.logging.log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>p6spy</groupId>
                <artifactId>p6spy</artifactId>
                <version>${p6spy.version}</version>
            </dependency>
            <!--io-->
            <dependency>
                <groupId>io.github.openfeign</groupId>
                <artifactId>feign-core</artifactId>
                <version>${io.github.openfeign.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-boot-starter</artifactId>
                <version>${io.springfox.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jaegertracing</groupId>
                <artifactId>jaeger-client</artifactId>
                <version>${io.jaegertracing.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.tomcat.embed</groupId>
                        <artifactId>tomcat-embed-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.projectreactor</groupId>
                <artifactId>reactor-test</artifactId>
                <scope>test</scope>
                <version>${io.projectreactor.version}</version>
            </dependency>
            <!--net-->
            <dependency>
                <groupId>net.lingala.zip4j</groupId>
                <artifactId>zip4j</artifactId>
                <version>${net.lingala.zip4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${org.apache.poi.version}</version>
            </dependency>
            <!-- cas -->
            <dependency>
                <groupId>org.apereo.cas</groupId>
                <artifactId>cas-server-core-authentication-api</artifactId>
                <version>${org.apereo.cas.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apereo.cas</groupId>
                <artifactId>cas-server-core-authentication-attributes</artifactId>
                <version>${org.apereo.cas.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apereo.cas</groupId>
                <artifactId>cas-server-core-webflow</artifactId>
                <version>${org.apereo.cas.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apereo.cas</groupId>
                <artifactId>cas-server-core-webflow-api</artifactId>
                <version>${org.apereo.cas.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apereo.cas</groupId>
                <artifactId>cas-server-core-web-api</artifactId>
                <version>${org.apereo.cas.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apereo.cas</groupId>
                <artifactId>cas-server-support-jdbc</artifactId>
                <version>${org.apereo.cas.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apereo.cas</groupId>
                <artifactId>cas-server-support-jdbc-authentication</artifactId>
                <version>${org.apereo.cas.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apereo.cas</groupId>
                <artifactId>cas-server-support-jdbc-drivers</artifactId>
                <version>${org.apereo.cas.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apereo.cas</groupId>
                <artifactId>cas-server-support-jpa-service-registry</artifactId>
                <version>${org.apereo.cas.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apereo.cas</groupId>
                <artifactId>cas-server-core-services-api</artifactId>
                <version>${org.apereo.cas.version}</version>
            </dependency>
            <!-- 与maven-war-plugin里配置的overlays配合使用（CAS） -->
            <dependency>
                <groupId>org.apereo.cas</groupId>
                <artifactId>cas-server-webapp${app.server}</artifactId>
                <version>${org.apereo.cas.version}</version>
                <type>war</type>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${org.hibernate.validator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson</artifactId>
                <version>${org.redisson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>${org.reflections.version}</version>
            </dependency>
            <!--接口文档-->
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${org.springdoc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-context</artifactId>
                <version>${org.springframework.cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-openfeign-core</artifactId>
                <version>${org.springframework.cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter</artifactId>
                <version>${org.springframework.cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-gateway</artifactId>
                <version>${org.springframework.cloud.version}</version>
            </dependency>
            <!-- SpringCloud-2020.X.X以后版本官方重构了bootstrap引导配置的加载方式，需要添加以下依赖 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-bootstrap</artifactId>
                <version>${org.springframework.cloud.version}</version>
            </dependency>
            <!-- 负载均衡  -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-loadbalancer</artifactId>
                <version>${org.springframework.cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${org.apache.poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>${org.apache.velocity.version}</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${org.aspectj.version}</version>
            </dependency>
            <dependency>
                <groupId>org.freemarker</groupId>
                <artifactId>freemarker</artifactId>
                <version>${org.freemarker.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>runtime</scope>
            </dependency>
            <!-- spring cloud Eureka Client 启动器，因为Eureka Server开启了安全校验，
                所有需要依赖更大范围的jar包资源spring-cloud-starter-eureka-server-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
                <version>${org.springframework.cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
                <version>${org.springframework.cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-openfeign</artifactId>
                <version>${org.springframework.cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.stylefeng.roses</groupId>
                <artifactId>kernel-model</artifactId>
                <version>${cn.stylefeng.roses.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.social</groupId>
                <artifactId>spring-social-config</artifactId>
                <version>${org.springframework.social.version}</version>
            </dependency>
            <!--thymeleaf-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-thymeleaf</artifactId>
                <version>${org.springframework.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ssssssss</groupId>
                <artifactId>magic-api-spring-boot-starter</artifactId>
                <version>${org.ssssssss.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ssssssss</groupId>
                <artifactId>magic-api-plugin-springdoc</artifactId>
                <version>${org.ssssssss.version}</version>
            </dependency>
            <dependency>
                <groupId>nz.net.ultraq.thymeleaf</groupId>
                <artifactId>thymeleaf-layout-dialect</artifactId>
                <version>${nz.net.ultraq.thymeleaf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thymeleaf</groupId>
                <artifactId>thymeleaf</artifactId>
                <version>${org.thymeleaf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thymeleaf</groupId>
                <artifactId>thymeleaf-spring5</artifactId>
                <version>${org.thymeleaf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thymeleaf.extras</groupId>
                <artifactId>thymeleaf-extras-springsecurity5</artifactId>
                <version>${org.thymeleaf.extras.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.penggle</groupId>
                <artifactId>kaptcha</artifactId>
                <version>${com.github.penggle.version}</version>
            </dependency>
            <dependency>
                <groupId>us.codecraft</groupId>
                <artifactId>webmagic-core</artifactId>
                <version>${us.codecraft.version}</version>
            </dependency>
            <dependency>
                <groupId>us.codecraft</groupId>
                <artifactId>webmagic-extension</artifactId>
                <version>${us.codecraft.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <modules>
        <module>common-all</module>
        <module>common-core</module>
        <module>common-exception</module>
        <module>common-log</module>
        <module>common-mp</module>
        <module>common-redis</module>
        <module>common-sentinel</module>
        <module>common-spring-doc</module>
        <module>common-web</module>
        <module>common-magic-doc</module>
    </modules>

    <name>${project.groupId}.${project.artifactId}</name>
    <url>https://github.com/fanzezhen/${project.artifactId}</url>
    <description>Commonly used</description>

    <!-- 代码库 -->
    <scm>
        <tag>master</tag>
        <url>https://github.com/fanzezhen/common.git</url>
        <connection>scm:git:git@github.com:fanzezhen/common.git</connection>
        <developerConnection>scm:git:git@github.com:fanzezhen/common.git</developerConnection>
    </scm>

    <!-- 开发者信息 -->
    <developers>
        <developer>
            <name>fanzezhen</name>
            <email>842618916@qq.com</email>
            <roles>
                <role>owner</role>
            </roles>
            <timezone>+8</timezone>
        </developer>
    </developers>

    <!-- 版权许可 -->
    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <!-- 定义snapshots库和releases库的nexus地址 -->
    <distributionManagement>
        <snapshotRepository>
            <id>oss</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>oss</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <!-- 使用个人资料：由于生成javadoc和源jar以及使用GPG签署组件是一个相当耗时的过程，因此这些执行通常与正常的构建配置隔离并移动到配置文件中。
    然后，在通过激活配置文件执行部署时，将使用此配置文件。 -->
    <profiles>
        <profile>
            <id>oss</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <jdk>${java.version}</jdk>
            </activation>
            <properties>
                <maven.compiler.source>${java.version}</maven.compiler.source>
                <maven.compiler.target>${java.version}</maven.compiler.target>
                <maven.compiler.compilerVersion>${java.version}</maven.compiler.compilerVersion>
                <gpg.executable>gpg</gpg.executable>
                <gpg.executable>C:/Program Files (x86)/Gpg4win/../GnuPG/bin/gpg.exe</gpg.executable>
                <!-- 前面pom.xml中配置了gpg的maven插件，这个目录就是你本地机器存放gpg秘钥的目录 -->
                <gpg.homedir>C:/Users/andy/AppData/Roaming/gnupg</gpg.homedir>
            </properties>
        </profile>
    </profiles>

    <build>
        <finalName>${project.artifactId}</finalName>
        <pluginManagement>
            <plugins>
                <!-- 指定编译器版本 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <forceJavacCompilerUse>true</forceJavacCompilerUse>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                </plugin>

                <!-- 生成sources源码包的插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-resources-plugin</artifactId>
                            <version>${maven-resources-plugin.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- 生成javadoc文档包的插件 -->
                
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                    <configuration>
                        <failOnError>false</failOnError>
                        <doclint>none</doclint>
                        <charset>UTF-8</charset>
                        <docencoding>UTF-8</docencoding>
                    </configuration>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                            <phase>package</phase>
                            <configuration>
                                <additionalJOption>-Xdoclint:none</additionalJOption>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>default-deploy</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>deploy</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>${nexus-staging-maven-plugin.version}</version>
                    <extensions>true</extensions>
                    <configuration>
                        <!-- 这个id不要乱设置，需要和后面的settings.xml中的server的id保持一致 -->
                        <serverId>oss</serverId>
                        <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                        <!-- 如果希望发布后自动执行close和release操作，此处可以调整为true -->
                        <autoReleaseAfterClose>true</autoReleaseAfterClose>
                    </configuration>
                    <executions>
                        <execution>
                            <id>deploy-to-sonatype</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>deploy</goal>
                                <goal>release</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-scm-plugin</artifactId>
                    <version>${maven-scm-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven-shade-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>shade</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!--gpg加密，用于生成.asc-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>${maven-gpg-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>sign-artifacts</id>
<!--                            <phase>deploy</phase>-->
                            <phase>verify</phase>
                            <goals>
                                <goal>sign</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${org.springframework.boot.version}</version>
                    <executions>
                        <execution>
                            <id>repackage</id>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                            <configuration>
                                <attach>false</attach>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- 指定编译器版本 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <!-- 生成sources源码包的插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <!-- 生成javadoc文档包的插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-scm-plugin</artifactId>
            </plugin>
            <!--gpg加密，用于生成.asc-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <!-- 远程仓库列表 -->
    <repositories>
        <!-- 阿里云仓库 -->
        <repository>
            <id>public</id>
            <name>aliyun nexus</name>
            <url>https://maven.aliyun.com/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
    </repositories>

    <!-- 插件仓库列表 -->
    <pluginRepositories>
        <!-- 阿里云仓库 -->
        <pluginRepository>
            <id>public</id>
            <name>aliyun nexus</name>
            <url>https://maven.aliyun.com/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

</project>

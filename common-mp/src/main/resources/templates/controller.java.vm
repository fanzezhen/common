package ${package.Controller};

import cn.hutool.core.bean.BeanUtil;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.github.fanzezhen.common.core.model.response.ActionResult;
import lombok.extern.slf4j.Slf4j;
import ${package.Entity}.${entity};
import ${modelPackage}bo.${name}BO;
import ${modelPackage}dto.${name}DTO;
import ${modelPackage}dto.${name}SearchDTO;
import ${package.Service}.${table.serviceName};
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
#if(${restControllerStyle})
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
import javax.annotation.Resource;
import javax.validation.constraints.NotEmpty;
import java.util.Set;

/**
 * $!{table.comment} 接口
 *
 * @author ${author}
 * @createTime ${createTime}
 * @since ${date}
 */
@Slf4j
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/${path}")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Resource
    private ${table.serviceName} service;

    /**
     * 查询
     *
     * @param pk 主键
     */
    @GetMapping("/get")
    public ActionResult<${name}DTO> get(@RequestParam ${pkType} pk) {
        ${name}BO bo = service.get(pk);
        return ActionResult.success(BeanUtil.copyProperties(bo, ${name}DTO.class));
    }
    
    /**
     * 分页查询
     */
    @PostMapping("/page")
    public ActionResult<Page<${name}DTO>> page(@RequestBody @Validated ${name}SearchDTO searchDTO) {
        // 查询
        Page<${name}BO> boPage = service.page(searchDTO);
        // 返回值转换
        Page<${name}DTO> page = new Page<>();
        BeanUtil.copyProperties(boPage, page);
        return ActionResult.success(page);
    }
    
    /**
     * 保存
     */
    @PostMapping("/save")
    public ActionResult<${pkType}> save(@RequestBody @Validated ${name}DTO dto) {
        return ActionResult.success(service.save(dto));
    }
    
    /**
     * 删除
     */
    @PostMapping("/del/{pk}")
    public ActionResult<Boolean> del(@PathVariable ${pkType} pk) {
        return ActionResult.success(service.removeById(pk));
    }

    /**
     * 批量删除
     */
    @PostMapping("/del-batch")
    public ActionResult<Boolean> del(@RequestBody @NotEmpty Set<${pkType}> pks) {
        return ActionResult.success(service.removeBatchByIds(pks));
    }

}
#end
